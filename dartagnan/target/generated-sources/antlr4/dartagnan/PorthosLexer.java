// Generated from Porthos.g4 by ANTLR 4.4

package dartagnan;
import dartagnan.program.*;
import dartagnan.expression.*;
import dartagnan.program.Thread;
import java.util.HashMap;
import java.util.Map;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class PorthosLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__20=1, T__19=2, T__18=3, T__17=4, T__16=5, T__15=6, T__14=7, T__13=8, 
		T__12=9, T__11=10, T__10=11, T__9=12, T__8=13, T__7=14, T__6=15, T__5=16, 
		T__4=17, T__3=18, T__2=19, T__1=20, T__0=21, COMP_OP=22, ARITH_OP=23, 
		BOOL_OP=24, DIGIT=25, WORD=26, LETTER=27, WS=28, LPAR=29, RPAR=30, LCBRA=31, 
		RCBRA=32, COMMA=33, POINT=34, EQ=35, NEQ=36, LEQ=37, LT=38, GEQ=39, GT=40, 
		ADD=41, SUB=42, MULT=43, DIV=44, MOD=45, AND=46, OR=47, ATOMIC=48;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'"
	};
	public static final String[] ruleNames = {
		"T__20", "T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", 
		"T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", 
		"T__3", "T__2", "T__1", "T__0", "COMP_OP", "ARITH_OP", "BOOL_OP", "DIGIT", 
		"WORD", "LETTER", "WS", "LPAR", "RPAR", "LCBRA", "RCBRA", "COMMA", "POINT", 
		"EQ", "NEQ", "LEQ", "LT", "GEQ", "GT", "ADD", "SUB", "MULT", "DIV", "MOD", 
		"AND", "OR", "ATOMIC"
	};


	public PorthosLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Porthos.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\62\u0132\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\3\2\3\2\3\2\3\2\3\2\3\3"+
		"\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3"+
		"\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3\t"+
		"\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16"+
		"\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21"+
		"\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23"+
		"\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26"+
		"\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\5\27\u00d1\n\27\3\30"+
		"\3\30\3\30\3\30\3\30\5\30\u00d8\n\30\3\31\3\31\5\31\u00dc\n\31\3\32\3"+
		"\32\3\33\3\33\6\33\u00e2\n\33\r\33\16\33\u00e3\3\34\3\34\3\35\6\35\u00e9"+
		"\n\35\r\35\16\35\u00ea\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3"+
		"\"\3#\3#\3$\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3\'\3(\3(\3(\3)\3)\3*\3*\3+\3"+
		"+\3,\3,\3-\3-\3.\3.\3/\3/\3/\3/\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61"+
		"\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61"+
		"\3\61\3\61\5\61\u0131\n\61\2\2\62\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23"+
		"\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31"+
		"\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60"+
		"_\61a\62\3\2\5\3\2\62;\4\2C\\c|\5\2\13\f\17\17\"\"\u0143\2\3\3\2\2\2\2"+
		"\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2"+
		"\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2"+
		"\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2"+
		"\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2"+
		"\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2"+
		"\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2"+
		"K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3"+
		"\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\3c\3\2\2"+
		"\2\5h\3\2\2\2\7k\3\2\2\2\tr\3\2\2\2\13y\3\2\2\2\r~\3\2\2\2\17\u0085\3"+
		"\2\2\2\21\u0087\3\2\2\2\23\u008d\3\2\2\2\25\u008f\3\2\2\2\27\u0091\3\2"+
		"\2\2\31\u0094\3\2\2\2\33\u0099\3\2\2\2\35\u009c\3\2\2\2\37\u00a2\3\2\2"+
		"\2!\u00a7\3\2\2\2#\u00ac\3\2\2\2%\u00b2\3\2\2\2\'\u00b8\3\2\2\2)\u00bd"+
		"\3\2\2\2+\u00c4\3\2\2\2-\u00d0\3\2\2\2/\u00d7\3\2\2\2\61\u00db\3\2\2\2"+
		"\63\u00dd\3\2\2\2\65\u00e1\3\2\2\2\67\u00e5\3\2\2\29\u00e8\3\2\2\2;\u00ee"+
		"\3\2\2\2=\u00f0\3\2\2\2?\u00f2\3\2\2\2A\u00f4\3\2\2\2C\u00f6\3\2\2\2E"+
		"\u00f8\3\2\2\2G\u00fa\3\2\2\2I\u00fd\3\2\2\2K\u0100\3\2\2\2M\u0103\3\2"+
		"\2\2O\u0105\3\2\2\2Q\u0108\3\2\2\2S\u010a\3\2\2\2U\u010c\3\2\2\2W\u010e"+
		"\3\2\2\2Y\u0110\3\2\2\2[\u0112\3\2\2\2]\u0114\3\2\2\2_\u0118\3\2\2\2a"+
		"\u0130\3\2\2\2cd\7u\2\2de\7{\2\2ef\7p\2\2fg\7e\2\2g\4\3\2\2\2hi\7>\2\2"+
		"ij\7/\2\2j\6\3\2\2\2kl\7o\2\2lm\7h\2\2mn\7g\2\2no\7p\2\2op\7e\2\2pq\7"+
		"g\2\2q\b\3\2\2\2rs\7v\2\2st\7j\2\2tu\7t\2\2uv\7g\2\2vw\7c\2\2wx\7f\2\2"+
		"x\n\3\2\2\2yz\7v\2\2z{\7t\2\2{|\7w\2\2|}\7g\2\2}\f\3\2\2\2~\177\7n\2\2"+
		"\177\u0080\7y\2\2\u0080\u0081\7u\2\2\u0081\u0082\7{\2\2\u0082\u0083\7"+
		"p\2\2\u0083\u0084\7e\2\2\u0084\16\3\2\2\2\u0085\u0086\7<\2\2\u0086\20"+
		"\3\2\2\2\u0087\u0088\7y\2\2\u0088\u0089\7j\2\2\u0089\u008a\7k\2\2\u008a"+
		"\u008b\7n\2\2\u008b\u008c\7g\2\2\u008c\22\3\2\2\2\u008d\u008e\7=\2\2\u008e"+
		"\24\3\2\2\2\u008f\u0090\7?\2\2\u0090\26\3\2\2\2\u0091\u0092\7k\2\2\u0092"+
		"\u0093\7h\2\2\u0093\30\3\2\2\2\u0094\u0095\7V\2\2\u0095\u0096\7t\2\2\u0096"+
		"\u0097\7w\2\2\u0097\u0098\7g\2\2\u0098\32\3\2\2\2\u0099\u009a\7<\2\2\u009a"+
		"\u009b\7?\2\2\u009b\34\3\2\2\2\u009c\u009d\7u\2\2\u009d\u009e\7v\2\2\u009e"+
		"\u009f\7q\2\2\u009f\u00a0\7t\2\2\u00a0\u00a1\7g\2\2\u00a1\36\3\2\2\2\u00a2"+
		"\u00a3\7g\2\2\u00a3\u00a4\7n\2\2\u00a4\u00a5\7u\2\2\u00a5\u00a6\7g\2\2"+
		"\u00a6 \3\2\2\2\u00a7\u00a8\7n\2\2\u00a8\u00a9\7q\2\2\u00a9\u00aa\7c\2"+
		"\2\u00aa\u00ab\7f\2\2\u00ab\"\3\2\2\2\u00ac\u00ad\7k\2\2\u00ad\u00ae\7"+
		"u\2\2\u00ae\u00af\7{\2\2\u00af\u00b0\7p\2\2\u00b0\u00b1\7e\2\2\u00b1$"+
		"\3\2\2\2\u00b2\u00b3\7H\2\2\u00b3\u00b4\7c\2\2\u00b4\u00b5\7n\2\2\u00b5"+
		"\u00b6\7u\2\2\u00b6\u00b7\7g\2\2\u00b7&\3\2\2\2\u00b8\u00b9\7v\2\2\u00b9"+
		"\u00ba\7j\2\2\u00ba\u00bb\7g\2\2\u00bb\u00bc\7p\2\2\u00bc(\3\2\2\2\u00bd"+
		"\u00be\7g\2\2\u00be\u00bf\7z\2\2\u00bf\u00c0\7k\2\2\u00c0\u00c1\7u\2\2"+
		"\u00c1\u00c2\7v\2\2\u00c2\u00c3\7u\2\2\u00c3*\3\2\2\2\u00c4\u00c5\7h\2"+
		"\2\u00c5\u00c6\7c\2\2\u00c6\u00c7\7n\2\2\u00c7\u00c8\7u\2\2\u00c8\u00c9"+
		"\7g\2\2\u00c9,\3\2\2\2\u00ca\u00d1\5G$\2\u00cb\u00d1\5I%\2\u00cc\u00d1"+
		"\5K&\2\u00cd\u00d1\5M\'\2\u00ce\u00d1\5O(\2\u00cf\u00d1\5Q)\2\u00d0\u00ca"+
		"\3\2\2\2\u00d0\u00cb\3\2\2\2\u00d0\u00cc\3\2\2\2\u00d0\u00cd\3\2\2\2\u00d0"+
		"\u00ce\3\2\2\2\u00d0\u00cf\3\2\2\2\u00d1.\3\2\2\2\u00d2\u00d8\5S*\2\u00d3"+
		"\u00d8\5U+\2\u00d4\u00d8\5W,\2\u00d5\u00d8\5Y-\2\u00d6\u00d8\5[.\2\u00d7"+
		"\u00d2\3\2\2\2\u00d7\u00d3\3\2\2\2\u00d7\u00d4\3\2\2\2\u00d7\u00d5\3\2"+
		"\2\2\u00d7\u00d6\3\2\2\2\u00d8\60\3\2\2\2\u00d9\u00dc\5]/\2\u00da\u00dc"+
		"\5_\60\2\u00db\u00d9\3\2\2\2\u00db\u00da\3\2\2\2\u00dc\62\3\2\2\2\u00dd"+
		"\u00de\t\2\2\2\u00de\64\3\2\2\2\u00df\u00e2\5\67\34\2\u00e0\u00e2\5\63"+
		"\32\2\u00e1\u00df\3\2\2\2\u00e1\u00e0\3\2\2\2\u00e2\u00e3\3\2\2\2\u00e3"+
		"\u00e1\3\2\2\2\u00e3\u00e4\3\2\2\2\u00e4\66\3\2\2\2\u00e5\u00e6\t\3\2"+
		"\2\u00e68\3\2\2\2\u00e7\u00e9\t\4\2\2\u00e8\u00e7\3\2\2\2\u00e9\u00ea"+
		"\3\2\2\2\u00ea\u00e8\3\2\2\2\u00ea\u00eb\3\2\2\2\u00eb\u00ec\3\2\2\2\u00ec"+
		"\u00ed\b\35\2\2\u00ed:\3\2\2\2\u00ee\u00ef\7*\2\2\u00ef<\3\2\2\2\u00f0"+
		"\u00f1\7+\2\2\u00f1>\3\2\2\2\u00f2\u00f3\7}\2\2\u00f3@\3\2\2\2\u00f4\u00f5"+
		"\7\177\2\2\u00f5B\3\2\2\2\u00f6\u00f7\7.\2\2\u00f7D\3\2\2\2\u00f8\u00f9"+
		"\7\60\2\2\u00f9F\3\2\2\2\u00fa\u00fb\7?\2\2\u00fb\u00fc\7?\2\2\u00fcH"+
		"\3\2\2\2\u00fd\u00fe\7#\2\2\u00fe\u00ff\7?\2\2\u00ffJ\3\2\2\2\u0100\u0101"+
		"\7>\2\2\u0101\u0102\7?\2\2\u0102L\3\2\2\2\u0103\u0104\7>\2\2\u0104N\3"+
		"\2\2\2\u0105\u0106\7@\2\2\u0106\u0107\7?\2\2\u0107P\3\2\2\2\u0108\u0109"+
		"\7@\2\2\u0109R\3\2\2\2\u010a\u010b\7-\2\2\u010bT\3\2\2\2\u010c\u010d\7"+
		"/\2\2\u010dV\3\2\2\2\u010e\u010f\7,\2\2\u010fX\3\2\2\2\u0110\u0111\7\61"+
		"\2\2\u0111Z\3\2\2\2\u0112\u0113\7\'\2\2\u0113\\\3\2\2\2\u0114\u0115\7"+
		"c\2\2\u0115\u0116\7p\2\2\u0116\u0117\7f\2\2\u0117^\3\2\2\2\u0118\u0119"+
		"\7q\2\2\u0119\u011a\7t\2\2\u011a`\3\2\2\2\u011b\u011c\7a\2\2\u011c\u011d"+
		"\7p\2\2\u011d\u0131\7c\2\2\u011e\u011f\7a\2\2\u011f\u0120\7u\2\2\u0120"+
		"\u0131\7e\2\2\u0121\u0122\7a\2\2\u0122\u0123\7t\2\2\u0123\u0131\7z\2\2"+
		"\u0124\u0125\7a\2\2\u0125\u0126\7c\2\2\u0126\u0127\7e\2\2\u0127\u0131"+
		"\7s\2\2\u0128\u0129\7a\2\2\u0129\u012a\7t\2\2\u012a\u012b\7g\2\2\u012b"+
		"\u0131\7n\2\2\u012c\u012d\7a\2\2\u012d\u012e\7e\2\2\u012e\u012f\7q\2\2"+
		"\u012f\u0131\7p\2\2\u0130\u011b\3\2\2\2\u0130\u011e\3\2\2\2\u0130\u0121"+
		"\3\2\2\2\u0130\u0124\3\2\2\2\u0130\u0128\3\2\2\2\u0130\u012c\3\2\2\2\u0131"+
		"b\3\2\2\2\n\2\u00d0\u00d7\u00db\u00e1\u00e3\u00ea\u0130\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}